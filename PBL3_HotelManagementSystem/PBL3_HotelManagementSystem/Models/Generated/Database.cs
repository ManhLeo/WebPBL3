




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `HotelManageDB`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=LAPTOP-E2UO0FGP;Initial Catalog=PBL;Integrated Security=True`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace HotelManageDB
{

	public partial class HotelManageDBDB : Database
	{
		public HotelManageDBDB() 
			: base("HotelManageDB")
		{
			CommonConstruct();
		}

		public HotelManageDBDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			HotelManageDBDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static HotelManageDBDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new HotelManageDBDB();
        }

		[ThreadStatic] static HotelManageDBDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static HotelManageDBDB repo { get { return HotelManageDBDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.Account")]



	[PrimaryKey("IDAccount", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class Account : HotelManageDBDB.Record<Account>  
    {



		[Column] public string IDAccount { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public string Pass { get; set; }





		[Column] public string PhanQuyen { get; set; }



	}

    

	[TableName("dbo.DatDichVu")]



	[PrimaryKey("IDDatDV", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class DatDichVu : HotelManageDBDB.Record<DatDichVu>  
    {



		[Column] public string IDDatDV { get; set; }





		[Column] public string IDKH { get; set; }





		[Column] public string IDDV { get; set; }





		[Column] public DateTime? NgaySuDung { get; set; }



	}

    

	[TableName("dbo.DatDichVuChiTiet")]



	[PrimaryKey("IDDatDVChiTiet", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class DatDichVuChiTiet : HotelManageDBDB.Record<DatDichVuChiTiet>  
    {



		[Column] public string IDDatDVChiTiet { get; set; }





		[Column] public string IDDatDV { get; set; }





		[Column] public string IDDV { get; set; }





		[Column] public int? SoLuong { get; set; }





		[Column] public double? GiaTien { get; set; }



	}

    

	[TableName("dbo.DatPhong")]



	[PrimaryKey("IDDatPhong", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class DatPhong : HotelManageDBDB.Record<DatPhong>  
    {



		[Column] public string IDDatPhong { get; set; }





		[Column] public string IDKH { get; set; }





		[Column] public string IDPHG { get; set; }





		[Column] public DateTime? NgayDat { get; set; }





		[Column] public DateTime? NgayTra { get; set; }





		[Column] public int? SoNgayThue { get; set; }





		[Column] public string TrangThai { get; set; }



	}

    

	[TableName("dbo.DichVu")]



	[PrimaryKey("IDDV", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class DichVu : HotelManageDBDB.Record<DichVu>  
    {



		[Column] public string IDDV { get; set; }





		[Column] public string TenDV { get; set; }





		[Column] public string IDLoaiDV { get; set; }



	}

    

	[TableName("dbo.HoaDon")]



	[PrimaryKey("IDHD", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class HoaDon : HotelManageDBDB.Record<HoaDon>  
    {



		[Column] public string IDHD { get; set; }





		[Column] public string IDKH { get; set; }





		[Column] public string IDHDChiTiet { get; set; }





		[Column] public DateTime? NgayTaoHD { get; set; }





		[Column] public double? TongDonGia { get; set; }



	}

    

	[TableName("dbo.HoaDonChiTiet")]



	[PrimaryKey("IDHDChiTiet", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class HoaDonChiTiet : HotelManageDBDB.Record<HoaDonChiTiet>  
    {



		[Column] public string IDHDChiTiet { get; set; }





		[Column] public string IDHD { get; set; }





		[Column] public string IDDatDVChiTiet { get; set; }





		[Column] public DateTime? NgayDat { get; set; }





		[Column] public DateTime? NgayTra { get; set; }



	}

    

	[TableName("dbo.KhachHang")]



	[PrimaryKey("IDKH", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class KhachHang : HotelManageDBDB.Record<KhachHang>  
    {



		[Column] public string IDKH { get; set; }





		[Column] public string HoTen { get; set; }





		[Column] public string CCCD { get; set; }





		[Column] public string SDT { get; set; }





		[Column] public string Email { get; set; }





		[Column] public bool? GioiTinh { get; set; }





		[Column] public string DiaChi { get; set; }



	}

    

	[TableName("dbo.LoaiDV")]



	[PrimaryKey("IDLoaiDV", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class LoaiDV : HotelManageDBDB.Record<LoaiDV>  
    {



		[Column] public string IDLoaiDV { get; set; }





		[Column] public string TenLoaiDV { get; set; }





		[Column] public double? DonGia { get; set; }





		[Column] public int? SoNguoi { get; set; }



	}

    

	[TableName("dbo.LoaiPhong")]



	[PrimaryKey("IDLoaiPhong", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class LoaiPhong : HotelManageDBDB.Record<LoaiPhong>  
    {



		[Column] public string IDLoaiPhong { get; set; }





		[Column] public string TenLoaiPhong { get; set; }





		[Column] public byte[] HinhAnh { get; set; }





		[Column] public double? DonGia { get; set; }





		[Column] public int? SoNguoi { get; set; }





		[Column] public int? SoGiuong { get; set; }



	}

    

	[TableName("dbo.Phong")]



	[PrimaryKey("IDPHG", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class Phong : HotelManageDBDB.Record<Phong>  
    {



		[Column] public string IDPHG { get; set; }





		[Column] public string IDLoaiPhong { get; set; }





		[Column] public string TenPHG { get; set; }





		[Column] public string TrangThai { get; set; }



	}

    

	[TableName("dbo.sysdiagrams")]



	[PrimaryKey("diagram_id")]




	[ExplicitColumns]

    public partial class sysdiagram : HotelManageDBDB.Record<sysdiagram>  
    {



		[Column] public string name { get; set; }





		[Column] public int principal_id { get; set; }





		[Column] public int diagram_id { get; set; }





		[Column] public int? version { get; set; }





		[Column] public byte[] definition { get; set; }



	}


}
